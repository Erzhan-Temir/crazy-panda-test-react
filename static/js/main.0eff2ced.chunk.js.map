{"version":3,"sources":["services/api.js","reducer/actions.js","constants/const.js","reducer/selectors.js","components/pagination/pagination.jsx","components/search-input/search-input.jsx","components/loading-stub/loading-stub.jsx","hocs/with-loading.jsx","hocs/with-sorting.jsx","components/table/table.jsx","hocs/with-error-boundary.jsx","components/app/app.jsx","reducer/reducer.js","index.js"],"names":["API","baseURL","getComments","fetch","this","then","response","json","Actions","ActionsCreator","type","loadedData","payload","changeValue","filterValue","Operations","dispatch","data","catch","idSortingValues","nameSortingValues","getLoadingState","state","isLoading","getCurrentPage","currentPage","getCurrentFilter","currentFilter","getMaxPageNumber","length","getItems","arr","start","end","slice","getSlicedItems","filter","item","name","indexOf","Pagination","useDispatch","useSelector","maxPageNumber","handlePageChange","className","onClick","disabled","xmlns","fill","viewBox","stroke","width","height","strokeLinecap","strokeLinejoin","strokeWidth","d","SearchInput","value","onChange","evt","target","handleInputChange","placeholder","LoadingStub","withLoadings","Component","props","useEffect","withSorting","tableItems","useState","idSortingValue","setIdSorting","nameSorting","setNameSorting","sortedItems","sort","a","b","toggleIdSorting","toggleNameSorting","compose","withLoading","map","id","withErrorBoundary","BaseComponent","WithErrorBoundary","throwError","hasError","connect","initialState","getNewPageNumber","newPageNumber","Math","round","store","createStore","action","Object","assign","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0eff2ced.chunk.js","sourcesContent":["const API = {\r\n  baseURL: `https://jsonplaceholder.typicode.com`,\r\n  getComments() {\r\n    return fetch(this.baseURL + `/comments`)\r\n      .then((response) => response.json());\r\n  }\r\n};\r\n\r\nexport default API;\r\n","import API from '../services/api';\r\n\r\nexport const Actions = {\r\n  REQUEST_DATA: `REQUEST_DATA`,\r\n  REQUEST_DATA_SUCCESS: `REQUEST_DATA_SUCCESS`,\r\n  REQUEST_DATA_ERROR: `REQUEST_DATA_ERROR`,\r\n  CHANGE_CURRENT_PAGE: `CHANGE_CURRENT_PAGE`,\r\n  CHANGE_CURRENT_FILTER: `CHANGE_CURRENT_FILTER`,\r\n};\r\n\r\nexport const ActionsCreator = {\r\n  requestData: () => {\r\n    return {\r\n      type: Actions.REQUEST_DATA,\r\n    };\r\n  },\r\n  requestDataSuccess: (loadedData) => {\r\n    return {\r\n      type: Actions.REQUEST_DATA_SUCCESS,\r\n      payload: loadedData,\r\n    };\r\n  },\r\n  requestDataError: () => {\r\n    return {\r\n      type: Actions.REQUEST_DATA_ERROR,\r\n    };\r\n  },\r\n  changeCurrentPage: (changeValue) => {\r\n    return {\r\n      type: Actions.CHANGE_CURRENT_PAGE,\r\n      payload: changeValue,\r\n    };\r\n  },\r\n  changeCurrentFilter: (filterValue) => {\r\n    return {\r\n      type: Actions.CHANGE_CURRENT_FILTER,\r\n      payload: filterValue\r\n    };\r\n  },\r\n};\r\n\r\nexport const Operations = {\r\n  requestData: (dispatch) => {\r\n    dispatch(ActionsCreator.requestData());\r\n    API.getComments()\r\n      .then((data) => dispatch(ActionsCreator.requestDataSuccess(data)))\r\n      .catch(() => dispatch(ActionsCreator.requestDataError()));\r\n  },\r\n};\r\n","export const ITEM_SHOW_COUNT = 50;\r\n\r\nexport const PAGE_CHANGE_BY_STEP = 1;\r\n\r\nexport const idSortingValues = {\r\n  toUp: 1,\r\n  toDown: -1,\r\n};\r\n\r\nexport const nameSortingValues = {\r\n  default: `default`,\r\n  toDown: `to-down`,\r\n};\r\n","import {ITEM_SHOW_COUNT, PAGE_CHANGE_BY_STEP} from '../constants/const';\r\n\r\nconst getSlicedItems = (state) => {\r\n  const start = (state.currentPage - PAGE_CHANGE_BY_STEP) * ITEM_SHOW_COUNT;\r\n  const end = state.currentPage * ITEM_SHOW_COUNT;\r\n  return state.data.slice(start, end);\r\n};\r\n\r\nconst getFilteredItems = (arr, filterValue) => {\r\n  return arr.filter((item) => item.name.indexOf(filterValue) > -1);\r\n};\r\n\r\nexport const getLoadingState = (state) => state.isLoading;\r\n\r\nexport const getCurrentPage = (state) => state.currentPage;\r\n\r\nexport const getCurrentFilter = (state) => state.currentFilter;\r\n\r\nexport const getMaxPageNumber = (state) => state.data.length / ITEM_SHOW_COUNT;\r\n\r\nexport const getItems = (state) => {\r\n  return getFilteredItems(getSlicedItems(state), state.currentFilter);\r\n};\r\n","import React from 'react';\r\nimport {ActionsCreator} from '../../reducer/actions';\r\nimport {getCurrentPage, getMaxPageNumber} from '../../reducer/selectors';\r\nimport {PAGE_CHANGE_BY_STEP} from '../../constants/const';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport './pagination.css';\r\n\r\nconst Pagination = () => {\r\n  const dispatch = useDispatch();\r\n  const currentPage = useSelector(getCurrentPage);\r\n  const maxPageNumber = useSelector(getMaxPageNumber);\r\n\r\n  const handlePageChange = (changeValue) => {\r\n    dispatch(ActionsCreator.changeCurrentPage(changeValue));\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-board__pagination\">\r\n\r\n      <button\r\n        onClick={() => handlePageChange(-maxPageNumber)}\r\n        disabled={currentPage === 1}\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" width=\"16\" height=\"16\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" />\r\n        </svg>\r\n      </button>\r\n\r\n      <button\r\n        onClick={() => handlePageChange(-PAGE_CHANGE_BY_STEP)}\r\n        disabled={currentPage === 1}\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" width=\"16\" height=\"16\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n        </svg>\r\n      </button>\r\n\r\n      <span className=\"main-board__page-number\">{currentPage}</span>\r\n\r\n      <button\r\n        onClick={() => handlePageChange(PAGE_CHANGE_BY_STEP)}\r\n        disabled={currentPage === maxPageNumber}\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" width=\"16\" height=\"16\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n        </svg>\r\n      </button>\r\n\r\n      <button\r\n        onClick={() => handlePageChange(maxPageNumber)}\r\n        disabled={currentPage === maxPageNumber}\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" width=\"16\" height=\"16\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport {ActionsCreator} from '../../reducer/actions';\r\nimport {getCurrentFilter} from '../../reducer/selectors';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport './search-input.css';\r\n\r\nconst SearchInput = () => {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(getCurrentFilter);\r\n\r\n  const handleInputChange = (evt) => {\r\n    dispatch(ActionsCreator.changeCurrentFilter(evt.target.value));\r\n  };\r\n\r\n  return (\r\n    <input\r\n      value={value}\r\n      onChange={(evt) => handleInputChange(evt)}\r\n      type=\"text\"\r\n      placeholder=\"Введите текст\"\r\n      className=\"main-board__search\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\nimport './loading-stub.css';\r\n\r\nconst LoadingStub = () => {\r\n  return (\r\n    <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n  );\r\n};\r\n\r\nexport default LoadingStub;\r\n","import React, {useEffect} from 'react';\r\nimport {getLoadingState} from '../reducer/selectors';\r\nimport {Operations} from '../reducer/actions';\r\nimport LoadingStub from '../components/loading-stub/loading-stub';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nconst withLoadings = (Component) => {\r\n  const WithLoading = (props) => {\r\n    const dispatch = useDispatch();\r\n    const isLoading = useSelector(getLoadingState);\r\n\r\n    useEffect(() => {\r\n      dispatch(Operations.requestData);\r\n    }, []);\r\n\r\n    if (isLoading) {\r\n      return <LoadingStub />;\r\n    }\r\n\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  return WithLoading;\r\n};\r\n\r\nexport default withLoadings;\r\n","import React, {useState} from 'react';\r\nimport {getItems} from '../reducer/selectors';\r\nimport {idSortingValues, nameSortingValues} from '../constants/const';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst withSorting = (Component) => {\r\n  const WithSorting = (props) => {\r\n\r\n    const tableItems = useSelector(getItems);\r\n    const [idSortingValue, setIdSorting] = useState(idSortingValues.toUp);\r\n    const [nameSorting, setNameSorting] = useState(nameSortingValues.default);\r\n\r\n    const sortedItems = tableItems.slice();\r\n\r\n\r\n    sortedItems.sort(() => {\r\n      return idSortingValue;\r\n    });\r\n\r\n    sortedItems.sort((a, b) => {\r\n      if (nameSorting === nameSortingValues.default) {\r\n        return sortedItems;\r\n      }\r\n      return b.name.length - a.name.length;\r\n    });\r\n\r\n\r\n    const toggleIdSorting = () => {\r\n      return idSortingValue === idSortingValues.toUp ? setIdSorting(idSortingValues.toDown) : setIdSorting(idSortingValues.toUp);\r\n    };\r\n\r\n    const toggleNameSorting = () => {\r\n      return nameSorting === nameSortingValues.default ? setNameSorting(nameSortingValues.toDown) : setNameSorting(nameSortingValues.default);\r\n    };\r\n\r\n\r\n    return <Component {...props} sortedItems={sortedItems} toggleIdSorting={toggleIdSorting} toggleNameSorting={toggleNameSorting} />;\r\n  };\r\n\r\n  return WithSorting;\r\n};\r\n\r\nexport default withSorting;\r\n","import React from 'react';\r\nimport {compose} from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport withLoading from '../../hocs/with-loading';\r\nimport withSorting from '../../hocs/with-sorting';\r\nimport './table.css';\r\n\r\nconst Table = (props) => {\r\n  const {sortedItems, toggleIdSorting, toggleNameSorting} = props;\r\n\r\n  return (\r\n    <div className=\"main-board__table\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th\r\n              onClick={() => toggleIdSorting()}\r\n            >ID</th>\r\n            <th\r\n              onClick={() => toggleNameSorting()}\r\n            >Name</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            sortedItems.map(({id, name}) => {\r\n              return (\r\n                <tr key={id}>\r\n                  <td>{id}</td>\r\n                  <td>{name}</td>\r\n                </tr>\r\n              );\r\n            })\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  sortedItems: PropTypes.array.isRequired,\r\n  toggleIdSorting: PropTypes.func.isRequired,\r\n  toggleNameSorting: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default compose(withLoading, withSorting)(Table);\r\n","import React, {Component} from 'react';\r\nimport {ActionsCreator} from '../reducer/actions';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst withErrorBoundary = (BaseComponent) => {\r\n  class WithErrorBoundary extends Component {\r\n\r\n    componentDidCatch() {\r\n      this.props.throwError();\r\n    }\r\n\r\n    render() {\r\n      if (this.props.hasError) {\r\n        return <p>Sorry, but something went wrong...</p>;\r\n      }\r\n\r\n      return <BaseComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  WithErrorBoundary.propTypes = {\r\n    hasError: PropTypes.bool.isRequired,\r\n    throwError: PropTypes.func.isRequired,\r\n  };\r\n\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      hasError: state.hasError,\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      throwError: () => dispatch(ActionsCreator.requestDataError)\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithErrorBoundary);\r\n};\r\n\r\nexport default withErrorBoundary;\r\n","import React from 'react';\r\nimport Pagination from '../pagination/pagination';\r\nimport SearchInput from '../search-input/search-input';\r\nimport Table from '../table/table';\r\nimport withErrorBoundary from '../../hocs/with-error-boundary';\r\nimport './app.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <section className=\"main-board\">\r\n      <h1 className=\"visually-hidden\">Comment table</h1>\r\n      <div className=\"main-board__wrapper\">\r\n        <SearchInput />\r\n        <Pagination />\r\n        <Table />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default withErrorBoundary(App);\r\n","import {Actions} from './actions';\r\nimport {ITEM_SHOW_COUNT} from '../constants/const';\r\n\r\nconst initialState = {\r\n  data: [],\r\n  isLoading: false,\r\n  hasError: false,\r\n  currentPage: 1,\r\n  currentFilter: ``,\r\n};\r\n\r\nexport const getNewPageNumber = (state, changeValue) => {\r\n  const currentPage = state.currentPage;\r\n  const newPageNumber = Math.round(currentPage + changeValue);\r\n  const maxPageNumber = Math.round(state.data.length / ITEM_SHOW_COUNT);\r\n\r\n  if (newPageNumber <= 0) {\r\n    return 1;\r\n  }\r\n\r\n  if (newPageNumber > maxPageNumber) {\r\n    return maxPageNumber;\r\n  }\r\n\r\n  return newPageNumber;\r\n};\r\n\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Actions.REQUEST_DATA:\r\n      return Object.assign({}, state, {\r\n        isLoading: true,\r\n      });\r\n    case Actions.REQUEST_DATA_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        data: action.payload,\r\n        isLoading: false,\r\n      });\r\n    case Actions.REQUEST_DATA_ERROR:\r\n      return Object.assign({}, state, {\r\n        hasError: true,\r\n      });\r\n    case Actions.CHANGE_CURRENT_PAGE:\r\n      return Object.assign({}, state, {\r\n        currentFilter: ``,\r\n        currentPage: getNewPageNumber(state, action.payload),\r\n      });\r\n    case Actions.CHANGE_CURRENT_FILTER:\r\n      return Object.assign({}, state, {\r\n        currentFilter: action.payload,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport {reducer} from './reducer/reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(`root`)\r\n);\r\n"],"sourceRoot":""}